//this source code was auto-generated by tolua#, do not modify it
using System;
using GameApp.DataBinder;
using LuaInterface;

public class GameApp_LogicGraph_LogicGraphInstanceWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameApp.LogicGraph.LogicGraphInstance), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("RegisterMethod", new LuaCSFunction(RegisterMethod));
		L.RegFunction("Init", new LuaCSFunction(Init));
		L.RegFunction("__eq", new LuaCSFunction(op_Equality));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("graphObject", new LuaCSFunction(get_graphObject), new LuaCSFunction(set_graphObject));
		L.RegVar("exposed", new LuaCSFunction(get_exposed), new LuaCSFunction(set_exposed));
		L.RegVar("Vals", new LuaCSFunction(get_Vals), new LuaCSFunction(set_Vals));
		L.RegVar("LuaPath", new LuaCSFunction(get_LuaPath), null);
		L.RegVar("Interfaces", new LuaCSFunction(get_Interfaces), null);
		L.RegVar("Methods", new LuaCSFunction(get_Methods), new LuaCSFunction(set_Methods));
		L.RegVar("InitDone", new LuaCSFunction(get_InitDone), new LuaCSFunction(set_InitDone));
		L.RegVar("ValDict", new LuaCSFunction(get_ValDict), null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterMethod(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameApp.LogicGraph.LogicGraphInstance obj = (GameApp.LogicGraph.LogicGraphInstance)ToLua.CheckObject<GameApp.LogicGraph.LogicGraphInstance>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.RegisterMethod(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameApp.LogicGraph.LogicGraphInstance obj = (GameApp.LogicGraph.LogicGraphInstance)ToLua.CheckObject<GameApp.LogicGraph.LogicGraphInstance>(L, 1);
			obj.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_graphObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.LogicGraph.LogicGraphInstance obj = (GameApp.LogicGraph.LogicGraphInstance)o;
			GameApp.LogicGraph.LogicGraphObject ret = obj.graphObject;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index graphObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_exposed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.LogicGraph.LogicGraphInstance obj = (GameApp.LogicGraph.LogicGraphInstance)o;
			GameApp.DataBinder.BindableValues ret = obj.exposed;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index exposed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Vals(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.LogicGraph.LogicGraphInstance obj = (GameApp.LogicGraph.LogicGraphInstance)o;
			GameApp.DataBinder.BindableValues ret = obj.Vals;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Vals on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LuaPath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.LogicGraph.LogicGraphInstance obj = (GameApp.LogicGraph.LogicGraphInstance)o;
			string ret = obj.LuaPath;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LuaPath on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Interfaces(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.LogicGraph.LogicGraphInstance obj = (GameApp.LogicGraph.LogicGraphInstance)o;
			System.Collections.Generic.List<GameApp.DataBinder.LuaPath> ret = obj.Interfaces;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Interfaces on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Methods(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.LogicGraph.LogicGraphInstance obj = (GameApp.LogicGraph.LogicGraphInstance)o;
			System.Collections.Generic.HashSet<string> ret = obj.Methods;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Methods on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_InitDone(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.LogicGraph.LogicGraphInstance obj = (GameApp.LogicGraph.LogicGraphInstance)o;
			bool ret = obj.InitDone;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index InitDone on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ValDict(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.LogicGraph.LogicGraphInstance obj = (GameApp.LogicGraph.LogicGraphInstance)o;
			System.Collections.Generic.Dictionary<string,object> ret = obj.ValDict;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ValDict on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_graphObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.LogicGraph.LogicGraphInstance obj = (GameApp.LogicGraph.LogicGraphInstance)o;
			GameApp.LogicGraph.LogicGraphObject arg0 = (GameApp.LogicGraph.LogicGraphObject)ToLua.CheckObject<GameApp.LogicGraph.LogicGraphObject>(L, 2);
			obj.graphObject = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index graphObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_exposed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.LogicGraph.LogicGraphInstance obj = (GameApp.LogicGraph.LogicGraphInstance)o;
			GameApp.DataBinder.BindableValues arg0 = (GameApp.DataBinder.BindableValues)ToLua.CheckObject<GameApp.DataBinder.BindableValues>(L, 2);
			obj.exposed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index exposed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Vals(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.LogicGraph.LogicGraphInstance obj = (GameApp.LogicGraph.LogicGraphInstance)o;
			GameApp.DataBinder.BindableValues arg0 = (GameApp.DataBinder.BindableValues)ToLua.CheckObject<GameApp.DataBinder.BindableValues>(L, 2);
			obj.Vals = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Vals on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Methods(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.LogicGraph.LogicGraphInstance obj = (GameApp.LogicGraph.LogicGraphInstance)o;
			System.Collections.Generic.HashSet<string> arg0 = (System.Collections.Generic.HashSet<string>)ToLua.CheckObject<System.Collections.Generic.HashSet<string>>(L, 2);
			obj.Methods = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Methods on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_InitDone(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.LogicGraph.LogicGraphInstance obj = (GameApp.LogicGraph.LogicGraphInstance)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.InitDone = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index InitDone on a nil value");
		}
	}
}

