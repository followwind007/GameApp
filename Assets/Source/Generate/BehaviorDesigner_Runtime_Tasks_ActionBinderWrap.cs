//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class BehaviorDesigner_Runtime_Tasks_ActionBinderWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(BehaviorDesigner.Runtime.Tasks.ActionBinder), typeof(BehaviorDesigner.Runtime.Tasks.Action));
		L.RegFunction("GetInstanceID", new LuaCSFunction(GetInstanceID));
		L.RegFunction("OnAwake", new LuaCSFunction(OnAwake));
		L.RegFunction("Init", new LuaCSFunction(Init));
		L.RegFunction("OnStart", new LuaCSFunction(OnStart));
		L.RegFunction("OnUpdate", new LuaCSFunction(OnUpdate));
		L.RegFunction("OnPause", new LuaCSFunction(OnPause));
		L.RegFunction("OnBehaviorComplete", new LuaCSFunction(OnBehaviorComplete));
		L.RegFunction("OnEnd", new LuaCSFunction(OnEnd));
		L.RegFunction("OnBehaviorRestart", new LuaCSFunction(OnBehaviorRestart));
		L.RegFunction("OnReset", new LuaCSFunction(OnReset));
		L.RegFunction("New", new LuaCSFunction(_CreateBehaviorDesigner_Runtime_Tasks_ActionBinder));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("PathKey", new LuaCSFunction(get_PathKey), null);
		L.RegVar("vals", new LuaCSFunction(get_vals), null);
		L.RegVar("Methods", new LuaCSFunction(get_Methods), new LuaCSFunction(set_Methods));
		L.RegVar("Vals", new LuaCSFunction(get_Vals), null);
		L.RegVar("LuaPath", new LuaCSFunction(get_LuaPath), null);
		L.RegVar("Interfaces", new LuaCSFunction(get_Interfaces), null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateBehaviorDesigner_Runtime_Tasks_ActionBinder(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				BehaviorDesigner.Runtime.Tasks.ActionBinder obj = new BehaviorDesigner.Runtime.Tasks.ActionBinder();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: BehaviorDesigner.Runtime.Tasks.ActionBinder.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetInstanceID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.ActionBinder obj = (BehaviorDesigner.Runtime.Tasks.ActionBinder)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.ActionBinder>(L, 1);
			string o = obj.GetInstanceID();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnAwake(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.ActionBinder obj = (BehaviorDesigner.Runtime.Tasks.ActionBinder)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.ActionBinder>(L, 1);
			obj.OnAwake();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.ActionBinder obj = (BehaviorDesigner.Runtime.Tasks.ActionBinder)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.ActionBinder>(L, 1);
			obj.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.ActionBinder obj = (BehaviorDesigner.Runtime.Tasks.ActionBinder)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.ActionBinder>(L, 1);
			obj.OnStart();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.ActionBinder obj = (BehaviorDesigner.Runtime.Tasks.ActionBinder)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.ActionBinder>(L, 1);
			BehaviorDesigner.Runtime.Tasks.TaskStatus o = obj.OnUpdate();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPause(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Tasks.ActionBinder obj = (BehaviorDesigner.Runtime.Tasks.ActionBinder)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.ActionBinder>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.OnPause(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBehaviorComplete(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.ActionBinder obj = (BehaviorDesigner.Runtime.Tasks.ActionBinder)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.ActionBinder>(L, 1);
			obj.OnBehaviorComplete();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.ActionBinder obj = (BehaviorDesigner.Runtime.Tasks.ActionBinder)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.ActionBinder>(L, 1);
			obj.OnEnd();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBehaviorRestart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.ActionBinder obj = (BehaviorDesigner.Runtime.Tasks.ActionBinder)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.ActionBinder>(L, 1);
			obj.OnBehaviorRestart();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnReset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.ActionBinder obj = (BehaviorDesigner.Runtime.Tasks.ActionBinder)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.ActionBinder>(L, 1);
			obj.OnReset();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PathKey(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, BehaviorDesigner.Runtime.Tasks.ActionBinder.PathKey);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_vals(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.ActionBinder obj = (BehaviorDesigner.Runtime.Tasks.ActionBinder)o;
			GameApp.DataBinder.BindableValues ret = obj.vals;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index vals on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Methods(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.ActionBinder obj = (BehaviorDesigner.Runtime.Tasks.ActionBinder)o;
			System.Collections.Generic.HashSet<int> ret = obj.Methods;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Methods on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Vals(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.ActionBinder obj = (BehaviorDesigner.Runtime.Tasks.ActionBinder)o;
			GameApp.DataBinder.BindableValues ret = obj.Vals;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Vals on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LuaPath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.ActionBinder obj = (BehaviorDesigner.Runtime.Tasks.ActionBinder)o;
			string ret = obj.LuaPath;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LuaPath on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Interfaces(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.ActionBinder obj = (BehaviorDesigner.Runtime.Tasks.ActionBinder)o;
			System.Collections.Generic.List<GameApp.DataBinder.LuaPath> ret = obj.Interfaces;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Interfaces on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Methods(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.ActionBinder obj = (BehaviorDesigner.Runtime.Tasks.ActionBinder)o;
			System.Collections.Generic.HashSet<int> arg0 = (System.Collections.Generic.HashSet<int>)ToLua.CheckObject<System.Collections.Generic.HashSet<int>>(L, 2);
			obj.Methods = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Methods on a nil value");
		}
	}
}

