//this source code was auto-generated by tolua#, do not modify it
using System;
using GameApp.DataBinder;
using LuaInterface;

public class GameApp_DataBinder_BehaviourBinderWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameApp.DataBinder.BehaviourBinder), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("get_Item", new LuaCSFunction(get_Item));
		L.RegFunction("OnBeforeSerialize", new LuaCSFunction(OnBeforeSerialize));
		L.RegFunction("OnAfterDeserialize", new LuaCSFunction(OnAfterDeserialize));
		L.RegFunction("OnRecycle", new LuaCSFunction(OnRecycle));
		L.RegFunction("RegisterMethod", new LuaCSFunction(RegisterMethod));
		L.RegFunction("Init", new LuaCSFunction(Init));
		L.RegVar("this", _this, null);
		L.RegFunction("__eq", new LuaCSFunction(op_Equality));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("luaPath", new LuaCSFunction(get_luaPath), new LuaCSFunction(set_luaPath));
		L.RegVar("interfaceLuaPaths", new LuaCSFunction(get_interfaceLuaPaths), new LuaCSFunction(set_interfaceLuaPaths));
		L.RegVar("vals", new LuaCSFunction(get_vals), new LuaCSFunction(set_vals));
		L.RegVar("InitDone", new LuaCSFunction(get_InitDone), new LuaCSFunction(set_InitDone));
		L.RegVar("Methods", new LuaCSFunction(get_Methods), new LuaCSFunction(set_Methods));
		L.RegVar("Vals", new LuaCSFunction(get_Vals), null);
		L.RegVar("Interfaces", new LuaCSFunction(get_Interfaces), null);
		L.RegVar("LuaPath", new LuaCSFunction(get_LuaPath), null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _get_this(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameApp.DataBinder.BehaviourBinder obj = (GameApp.DataBinder.BehaviourBinder)ToLua.CheckObject<GameApp.DataBinder.BehaviourBinder>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			object o = obj[arg0];
			ToLua.Push(L, o);
			return 1;

		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _this(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushvalue(L, 1);
			LuaDLL.tolua_bindthis(L, _get_this, null);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Item(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameApp.DataBinder.BehaviourBinder obj = (GameApp.DataBinder.BehaviourBinder)ToLua.CheckObject<GameApp.DataBinder.BehaviourBinder>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			object o = obj[arg0];
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBeforeSerialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameApp.DataBinder.BehaviourBinder obj = (GameApp.DataBinder.BehaviourBinder)ToLua.CheckObject<GameApp.DataBinder.BehaviourBinder>(L, 1);
			obj.OnBeforeSerialize();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnAfterDeserialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameApp.DataBinder.BehaviourBinder obj = (GameApp.DataBinder.BehaviourBinder)ToLua.CheckObject<GameApp.DataBinder.BehaviourBinder>(L, 1);
			obj.OnAfterDeserialize();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnRecycle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameApp.DataBinder.BehaviourBinder obj = (GameApp.DataBinder.BehaviourBinder)ToLua.CheckObject<GameApp.DataBinder.BehaviourBinder>(L, 1);
			obj.OnRecycle();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterMethod(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameApp.DataBinder.BehaviourBinder obj = (GameApp.DataBinder.BehaviourBinder)ToLua.CheckObject<GameApp.DataBinder.BehaviourBinder>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.RegisterMethod(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameApp.DataBinder.BehaviourBinder obj = (GameApp.DataBinder.BehaviourBinder)ToLua.CheckObject<GameApp.DataBinder.BehaviourBinder>(L, 1);
			obj.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_luaPath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.DataBinder.BehaviourBinder obj = (GameApp.DataBinder.BehaviourBinder)o;
			string ret = obj.luaPath;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index luaPath on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_interfaceLuaPaths(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.DataBinder.BehaviourBinder obj = (GameApp.DataBinder.BehaviourBinder)o;
			System.Collections.Generic.List<GameApp.DataBinder.LuaPath> ret = obj.interfaceLuaPaths;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index interfaceLuaPaths on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_vals(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.DataBinder.BehaviourBinder obj = (GameApp.DataBinder.BehaviourBinder)o;
			GameApp.DataBinder.BindableValues ret = obj.vals;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index vals on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_InitDone(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.DataBinder.BehaviourBinder obj = (GameApp.DataBinder.BehaviourBinder)o;
			bool ret = obj.InitDone;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index InitDone on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Methods(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.DataBinder.BehaviourBinder obj = (GameApp.DataBinder.BehaviourBinder)o;
			System.Collections.Generic.HashSet<string> ret = obj.Methods;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Methods on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Vals(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.DataBinder.BehaviourBinder obj = (GameApp.DataBinder.BehaviourBinder)o;
			GameApp.DataBinder.BindableValues ret = obj.Vals;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Vals on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Interfaces(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.DataBinder.BehaviourBinder obj = (GameApp.DataBinder.BehaviourBinder)o;
			System.Collections.Generic.List<GameApp.DataBinder.LuaPath> ret = obj.Interfaces;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Interfaces on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LuaPath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.DataBinder.BehaviourBinder obj = (GameApp.DataBinder.BehaviourBinder)o;
			string ret = obj.LuaPath;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LuaPath on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_luaPath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.DataBinder.BehaviourBinder obj = (GameApp.DataBinder.BehaviourBinder)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.luaPath = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index luaPath on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_interfaceLuaPaths(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.DataBinder.BehaviourBinder obj = (GameApp.DataBinder.BehaviourBinder)o;
			System.Collections.Generic.List<GameApp.DataBinder.LuaPath> arg0 = (System.Collections.Generic.List<GameApp.DataBinder.LuaPath>)ToLua.CheckObject(L, 2, TypeTraits<System.Collections.Generic.List<GameApp.DataBinder.LuaPath>>.type);
			obj.interfaceLuaPaths = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index interfaceLuaPaths on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_vals(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.DataBinder.BehaviourBinder obj = (GameApp.DataBinder.BehaviourBinder)o;
			GameApp.DataBinder.BindableValues arg0 = (GameApp.DataBinder.BindableValues)ToLua.CheckObject<GameApp.DataBinder.BindableValues>(L, 2);
			obj.vals = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index vals on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_InitDone(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.DataBinder.BehaviourBinder obj = (GameApp.DataBinder.BehaviourBinder)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.InitDone = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index InitDone on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Methods(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.DataBinder.BehaviourBinder obj = (GameApp.DataBinder.BehaviourBinder)o;
			System.Collections.Generic.HashSet<string> arg0 = (System.Collections.Generic.HashSet<string>)ToLua.CheckObject<System.Collections.Generic.HashSet<string>>(L, 2);
			obj.Methods = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Methods on a nil value");
		}
	}
}

