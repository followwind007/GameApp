//this source code was auto-generated by tolua#, do not modify it
using System;
using BehaviorDesigner.Runtime;
using LuaInterface;

public class BehaviorDesigner_Runtime_BehaviorWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(BehaviorDesigner.Runtime.Behavior), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("GetBehaviorSource", new LuaCSFunction(GetBehaviorSource));
		L.RegFunction("SetBehaviorSource", new LuaCSFunction(SetBehaviorSource));
		L.RegFunction("GetObject", new LuaCSFunction(GetObject));
		L.RegFunction("GetOwnerName", new LuaCSFunction(GetOwnerName));
		L.RegFunction("Start", new LuaCSFunction(Start));
		L.RegFunction("EnableBehavior", new LuaCSFunction(EnableBehavior));
		L.RegFunction("DisableBehavior", new LuaCSFunction(DisableBehavior));
		L.RegFunction("OnEnable", new LuaCSFunction(OnEnable));
		L.RegFunction("OnDisable", new LuaCSFunction(OnDisable));
		L.RegFunction("OnDestroy", new LuaCSFunction(OnDestroy));
		L.RegFunction("GetVariable", new LuaCSFunction(GetVariable));
		L.RegFunction("SetVariable", new LuaCSFunction(SetVariable));
		L.RegFunction("SetVariableValue", new LuaCSFunction(SetVariableValue));
		L.RegFunction("GetAllVariables", new LuaCSFunction(GetAllVariables));
		L.RegFunction("CheckForSerialization", new LuaCSFunction(CheckForSerialization));
		L.RegFunction("OnCollisionEnter", new LuaCSFunction(OnCollisionEnter));
		L.RegFunction("OnCollisionExit", new LuaCSFunction(OnCollisionExit));
		L.RegFunction("OnTriggerEnter", new LuaCSFunction(OnTriggerEnter));
		L.RegFunction("OnTriggerExit", new LuaCSFunction(OnTriggerExit));
		L.RegFunction("OnCollisionEnter2D", new LuaCSFunction(OnCollisionEnter2D));
		L.RegFunction("OnCollisionExit2D", new LuaCSFunction(OnCollisionExit2D));
		L.RegFunction("OnTriggerEnter2D", new LuaCSFunction(OnTriggerEnter2D));
		L.RegFunction("OnTriggerExit2D", new LuaCSFunction(OnTriggerExit2D));
		L.RegFunction("OnControllerColliderHit", new LuaCSFunction(OnControllerColliderHit));
		L.RegFunction("OnAnimatorIK", new LuaCSFunction(OnAnimatorIK));
		L.RegFunction("OnDrawGizmos", new LuaCSFunction(OnDrawGizmos));
		L.RegFunction("OnDrawGizmosSelected", new LuaCSFunction(OnDrawGizmosSelected));
		L.RegFunction("FindTaskWithName", new LuaCSFunction(FindTaskWithName));
		L.RegFunction("FindTasksWithName", new LuaCSFunction(FindTasksWithName));
		L.RegFunction("GetActiveTasks", new LuaCSFunction(GetActiveTasks));
		L.RegFunction("StartTaskCoroutine", new LuaCSFunction(StartTaskCoroutine));
		L.RegFunction("StopTaskCoroutine", new LuaCSFunction(StopTaskCoroutine));
		L.RegFunction("StopAllTaskCoroutines", new LuaCSFunction(StopAllTaskCoroutines));
		L.RegFunction("TaskCoroutineEnded", new LuaCSFunction(TaskCoroutineEnded));
		L.RegFunction("OnBehaviorStarted", new LuaCSFunction(OnBehaviorStarted));
		L.RegFunction("OnBehaviorRestarted", new LuaCSFunction(OnBehaviorRestarted));
		L.RegFunction("OnBehaviorEnded", new LuaCSFunction(OnBehaviorEnded));
		L.RegFunction("RegisterEvent", new LuaCSFunction(RegisterEvent));
		L.RegFunction("SendEvent", new LuaCSFunction(SendEvent));
		L.RegFunction("UnregisterEvent", new LuaCSFunction(UnregisterEvent));
		L.RegFunction("SaveResetValues", new LuaCSFunction(SaveResetValues));
		L.RegFunction("ToString", new LuaCSFunction(ToString));
		L.RegFunction("CreateBehaviorManager", new LuaCSFunction(CreateBehaviorManager));
		L.RegFunction("GetActionBinder", new LuaCSFunction(GetActionBinder));
		L.RegFunction("SendEventEx", new LuaCSFunction(SendEventEx));
		L.RegFunction("__eq", new LuaCSFunction(op_Equality));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("gizmoViewMode", new LuaCSFunction(get_gizmoViewMode), new LuaCSFunction(set_gizmoViewMode));
		L.RegVar("showBehaviorDesignerGizmo", new LuaCSFunction(get_showBehaviorDesignerGizmo), new LuaCSFunction(set_showBehaviorDesignerGizmo));
		L.RegVar("StartWhenEnabled", new LuaCSFunction(get_StartWhenEnabled), new LuaCSFunction(set_StartWhenEnabled));
		L.RegVar("AsynchronousLoad", new LuaCSFunction(get_AsynchronousLoad), new LuaCSFunction(set_AsynchronousLoad));
		L.RegVar("PauseWhenDisabled", new LuaCSFunction(get_PauseWhenDisabled), new LuaCSFunction(set_PauseWhenDisabled));
		L.RegVar("RestartWhenComplete", new LuaCSFunction(get_RestartWhenComplete), new LuaCSFunction(set_RestartWhenComplete));
		L.RegVar("LogTaskChanges", new LuaCSFunction(get_LogTaskChanges), new LuaCSFunction(set_LogTaskChanges));
		L.RegVar("Group", new LuaCSFunction(get_Group), new LuaCSFunction(set_Group));
		L.RegVar("ResetValuesOnRestart", new LuaCSFunction(get_ResetValuesOnRestart), new LuaCSFunction(set_ResetValuesOnRestart));
		L.RegVar("ExternalBehavior", new LuaCSFunction(get_ExternalBehavior), new LuaCSFunction(set_ExternalBehavior));
		L.RegVar("HasInheritedVariables", new LuaCSFunction(get_HasInheritedVariables), new LuaCSFunction(set_HasInheritedVariables));
		L.RegVar("BehaviorName", new LuaCSFunction(get_BehaviorName), new LuaCSFunction(set_BehaviorName));
		L.RegVar("BehaviorDescription", new LuaCSFunction(get_BehaviorDescription), new LuaCSFunction(set_BehaviorDescription));
		L.RegVar("ExecutionStatus", new LuaCSFunction(get_ExecutionStatus), new LuaCSFunction(set_ExecutionStatus));
		L.RegVar("HasEvent", new LuaCSFunction(get_HasEvent), null);
		L.RegVar("OnBehaviorStart", new LuaCSFunction(get_OnBehaviorStart), new LuaCSFunction(set_OnBehaviorStart));
		L.RegVar("OnBehaviorRestart", new LuaCSFunction(get_OnBehaviorRestart), new LuaCSFunction(set_OnBehaviorRestart));
		L.RegVar("OnBehaviorEnd", new LuaCSFunction(get_OnBehaviorEnd), new LuaCSFunction(set_OnBehaviorEnd));
		L.RegFunction("BehaviorHandler", new LuaCSFunction(BehaviorDesigner_Runtime_Behavior_BehaviorHandler));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBehaviorSource(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			BehaviorDesigner.Runtime.BehaviorSource o = obj.GetBehaviorSource();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetBehaviorSource(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			BehaviorDesigner.Runtime.BehaviorSource arg0 = (BehaviorDesigner.Runtime.BehaviorSource)ToLua.CheckObject<BehaviorDesigner.Runtime.BehaviorSource>(L, 2);
			obj.SetBehaviorSource(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			UnityEngine.Object o = obj.GetObject();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetOwnerName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			string o = obj.GetOwnerName();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Start(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			obj.Start();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnableBehavior(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			obj.EnableBehavior();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DisableBehavior(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
				obj.DisableBehavior();
				return 0;
			}
			else if (count == 2)
			{
				BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
				bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
				obj.DisableBehavior(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: BehaviorDesigner.Runtime.Behavior.DisableBehavior");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnEnable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			obj.OnEnable();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDisable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			obj.OnDisable();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDestroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			obj.OnDestroy();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetVariable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			BehaviorDesigner.Runtime.SharedVariable o = obj.GetVariable(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetVariable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			BehaviorDesigner.Runtime.SharedVariable arg1 = (BehaviorDesigner.Runtime.SharedVariable)ToLua.CheckObject<BehaviorDesigner.Runtime.SharedVariable>(L, 3);
			obj.SetVariable(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetVariableValue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			object arg1 = ToLua.ToVarObject(L, 3);
			obj.SetVariableValue(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAllVariables(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			System.Collections.Generic.List<BehaviorDesigner.Runtime.SharedVariable> o = obj.GetAllVariables();
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CheckForSerialization(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
				obj.CheckForSerialization();
				return 0;
			}
			else if (count == 2)
			{
				BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
				bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
				obj.CheckForSerialization(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: BehaviorDesigner.Runtime.Behavior.CheckForSerialization");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnCollisionEnter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			UnityEngine.Collision arg0 = (UnityEngine.Collision)ToLua.CheckObject<UnityEngine.Collision>(L, 2);
			obj.OnCollisionEnter(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnCollisionExit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			UnityEngine.Collision arg0 = (UnityEngine.Collision)ToLua.CheckObject<UnityEngine.Collision>(L, 2);
			obj.OnCollisionExit(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTriggerEnter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			UnityEngine.Collider arg0 = (UnityEngine.Collider)ToLua.CheckObject<UnityEngine.Collider>(L, 2);
			obj.OnTriggerEnter(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTriggerExit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			UnityEngine.Collider arg0 = (UnityEngine.Collider)ToLua.CheckObject<UnityEngine.Collider>(L, 2);
			obj.OnTriggerExit(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnCollisionEnter2D(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			UnityEngine.Collision2D arg0 = (UnityEngine.Collision2D)ToLua.CheckObject<UnityEngine.Collision2D>(L, 2);
			obj.OnCollisionEnter2D(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnCollisionExit2D(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			UnityEngine.Collision2D arg0 = (UnityEngine.Collision2D)ToLua.CheckObject<UnityEngine.Collision2D>(L, 2);
			obj.OnCollisionExit2D(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTriggerEnter2D(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			UnityEngine.Collider2D arg0 = (UnityEngine.Collider2D)ToLua.CheckObject<UnityEngine.Collider2D>(L, 2);
			obj.OnTriggerEnter2D(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTriggerExit2D(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			UnityEngine.Collider2D arg0 = (UnityEngine.Collider2D)ToLua.CheckObject<UnityEngine.Collider2D>(L, 2);
			obj.OnTriggerExit2D(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnControllerColliderHit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			UnityEngine.ControllerColliderHit arg0 = (UnityEngine.ControllerColliderHit)ToLua.CheckObject<UnityEngine.ControllerColliderHit>(L, 2);
			obj.OnControllerColliderHit(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnAnimatorIK(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			obj.OnAnimatorIK();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDrawGizmos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			obj.OnDrawGizmos();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDrawGizmosSelected(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			obj.OnDrawGizmosSelected();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FindTaskWithName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			BehaviorDesigner.Runtime.Tasks.Task o = obj.FindTaskWithName(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FindTasksWithName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			System.Collections.Generic.List<BehaviorDesigner.Runtime.Tasks.Task> o = obj.FindTasksWithName(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetActiveTasks(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			System.Collections.Generic.List<BehaviorDesigner.Runtime.Tasks.Task> o = obj.GetActiveTasks();
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartTaskCoroutine(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
				BehaviorDesigner.Runtime.Tasks.Task arg0 = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				UnityEngine.Coroutine o = obj.StartTaskCoroutine(arg0, arg1);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 4)
			{
				BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
				BehaviorDesigner.Runtime.Tasks.Task arg0 = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				object arg2 = ToLua.ToVarObject(L, 4);
				UnityEngine.Coroutine o = obj.StartTaskCoroutine(arg0, arg1, arg2);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: BehaviorDesigner.Runtime.Behavior.StartTaskCoroutine");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopTaskCoroutine(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.StopTaskCoroutine(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopAllTaskCoroutines(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			obj.StopAllTaskCoroutines();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TaskCoroutineEnded(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			BehaviorDesigner.Runtime.TaskCoroutine arg0 = (BehaviorDesigner.Runtime.TaskCoroutine)ToLua.CheckObject<BehaviorDesigner.Runtime.TaskCoroutine>(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.TaskCoroutineEnded(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBehaviorStarted(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			obj.OnBehaviorStarted();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBehaviorRestarted(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			obj.OnBehaviorRestarted();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBehaviorEnded(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			obj.OnBehaviorEnded();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			System.Action arg1 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 3);
			obj.RegisterEvent(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.SendEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnregisterEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			System.Action arg1 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 3);
			obj.UnregisterEvent(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SaveResetValues(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			obj.SaveResetValues();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			string o = obj.ToString();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateBehaviorManager(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			BehaviorDesigner.Runtime.BehaviorManager o = BehaviorDesigner.Runtime.Behavior.CreateBehaviorManager();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetActionBinder(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			BehaviorDesigner.Runtime.Tasks.ActionBinder o = obj.GetActionBinder(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendEventEx(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				object arg1 = ToLua.ToVarObject(L, 3);
				obj.SendEventEx(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				object arg1 = ToLua.ToVarObject(L, 3);
				object arg2 = ToLua.ToVarObject(L, 4);
				obj.SendEventEx(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				object arg1 = ToLua.ToVarObject(L, 3);
				object arg2 = ToLua.ToVarObject(L, 4);
				object arg3 = ToLua.ToVarObject(L, 5);
				obj.SendEventEx(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: BehaviorDesigner.Runtime.Behavior.SendEventEx");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_gizmoViewMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			BehaviorDesigner.Runtime.Behavior.GizmoViewMode ret = obj.gizmoViewMode;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index gizmoViewMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_showBehaviorDesignerGizmo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			bool ret = obj.showBehaviorDesignerGizmo;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showBehaviorDesignerGizmo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_StartWhenEnabled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			bool ret = obj.StartWhenEnabled;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index StartWhenEnabled on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AsynchronousLoad(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			bool ret = obj.AsynchronousLoad;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AsynchronousLoad on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PauseWhenDisabled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			bool ret = obj.PauseWhenDisabled;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PauseWhenDisabled on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RestartWhenComplete(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			bool ret = obj.RestartWhenComplete;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RestartWhenComplete on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LogTaskChanges(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			bool ret = obj.LogTaskChanges;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LogTaskChanges on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Group(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			int ret = obj.Group;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Group on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ResetValuesOnRestart(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			bool ret = obj.ResetValuesOnRestart;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ResetValuesOnRestart on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ExternalBehavior(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			BehaviorDesigner.Runtime.ExternalBehavior ret = obj.ExternalBehavior;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ExternalBehavior on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HasInheritedVariables(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			bool ret = obj.HasInheritedVariables;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index HasInheritedVariables on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BehaviorName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			string ret = obj.BehaviorName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BehaviorName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BehaviorDescription(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			string ret = obj.BehaviorDescription;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BehaviorDescription on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ExecutionStatus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			BehaviorDesigner.Runtime.Tasks.TaskStatus ret = obj.ExecutionStatus;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ExecutionStatus on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HasEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			bool[] ret = obj.HasEvent;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index HasEvent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnBehaviorStart(IntPtr L)
	{
		ToLua.Push(L, new EventObject(typeof(BehaviorDesigner.Runtime.Behavior.BehaviorHandler)));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnBehaviorRestart(IntPtr L)
	{
		ToLua.Push(L, new EventObject(typeof(BehaviorDesigner.Runtime.Behavior.BehaviorHandler)));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnBehaviorEnd(IntPtr L)
	{
		ToLua.Push(L, new EventObject(typeof(BehaviorDesigner.Runtime.Behavior.BehaviorHandler)));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_gizmoViewMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			BehaviorDesigner.Runtime.Behavior.GizmoViewMode arg0 = (BehaviorDesigner.Runtime.Behavior.GizmoViewMode)ToLua.CheckObject(L, 2, TypeTraits<BehaviorDesigner.Runtime.Behavior.GizmoViewMode>.type);
			obj.gizmoViewMode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index gizmoViewMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_showBehaviorDesignerGizmo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.showBehaviorDesignerGizmo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showBehaviorDesignerGizmo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_StartWhenEnabled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.StartWhenEnabled = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index StartWhenEnabled on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AsynchronousLoad(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.AsynchronousLoad = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AsynchronousLoad on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PauseWhenDisabled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.PauseWhenDisabled = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PauseWhenDisabled on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RestartWhenComplete(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.RestartWhenComplete = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RestartWhenComplete on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LogTaskChanges(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.LogTaskChanges = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LogTaskChanges on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Group(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.Group = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Group on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ResetValuesOnRestart(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.ResetValuesOnRestart = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ResetValuesOnRestart on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ExternalBehavior(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			BehaviorDesigner.Runtime.ExternalBehavior arg0 = (BehaviorDesigner.Runtime.ExternalBehavior)ToLua.CheckObject<BehaviorDesigner.Runtime.ExternalBehavior>(L, 2);
			obj.ExternalBehavior = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ExternalBehavior on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_HasInheritedVariables(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.HasInheritedVariables = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index HasInheritedVariables on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BehaviorName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.BehaviorName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BehaviorName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BehaviorDescription(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.BehaviorDescription = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BehaviorDescription on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ExecutionStatus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)o;
			BehaviorDesigner.Runtime.Tasks.TaskStatus arg0 = (BehaviorDesigner.Runtime.Tasks.TaskStatus)ToLua.CheckObject(L, 2, TypeTraits<BehaviorDesigner.Runtime.Tasks.TaskStatus>.type);
			obj.ExecutionStatus = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ExecutionStatus on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnBehaviorStart(IntPtr L)
	{
		try
		{
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'BehaviorDesigner.Runtime.Behavior.OnBehaviorStart' can only appear on the left hand side of += or -= when used outside of the type 'BehaviorDesigner.Runtime.Behavior'");
			}

			if (arg0.op == EventOp.Add)
			{
				BehaviorDesigner.Runtime.Behavior.BehaviorHandler ev = (BehaviorDesigner.Runtime.Behavior.BehaviorHandler)arg0.func;
				obj.OnBehaviorStart += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				BehaviorDesigner.Runtime.Behavior.BehaviorHandler ev = (BehaviorDesigner.Runtime.Behavior.BehaviorHandler)arg0.func;
				obj.OnBehaviorStart -= ev;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnBehaviorRestart(IntPtr L)
	{
		try
		{
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'BehaviorDesigner.Runtime.Behavior.OnBehaviorRestart' can only appear on the left hand side of += or -= when used outside of the type 'BehaviorDesigner.Runtime.Behavior'");
			}

			if (arg0.op == EventOp.Add)
			{
				BehaviorDesigner.Runtime.Behavior.BehaviorHandler ev = (BehaviorDesigner.Runtime.Behavior.BehaviorHandler)arg0.func;
				obj.OnBehaviorRestart += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				BehaviorDesigner.Runtime.Behavior.BehaviorHandler ev = (BehaviorDesigner.Runtime.Behavior.BehaviorHandler)arg0.func;
				obj.OnBehaviorRestart -= ev;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnBehaviorEnd(IntPtr L)
	{
		try
		{
			BehaviorDesigner.Runtime.Behavior obj = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 1);
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'BehaviorDesigner.Runtime.Behavior.OnBehaviorEnd' can only appear on the left hand side of += or -= when used outside of the type 'BehaviorDesigner.Runtime.Behavior'");
			}

			if (arg0.op == EventOp.Add)
			{
				BehaviorDesigner.Runtime.Behavior.BehaviorHandler ev = (BehaviorDesigner.Runtime.Behavior.BehaviorHandler)arg0.func;
				obj.OnBehaviorEnd += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				BehaviorDesigner.Runtime.Behavior.BehaviorHandler ev = (BehaviorDesigner.Runtime.Behavior.BehaviorHandler)arg0.func;
				obj.OnBehaviorEnd -= ev;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BehaviorDesigner_Runtime_Behavior_BehaviorHandler(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<BehaviorDesigner.Runtime.Behavior.BehaviorHandler>.Create(func);
				ToLua.Push(L, arg1);
				func.Dispose();
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<BehaviorDesigner.Runtime.Behavior.BehaviorHandler>.Create(func, self);
				ToLua.Push(L, arg1);
				func.Dispose();
				self.Dispose();
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

